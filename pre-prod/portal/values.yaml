portal-frontend:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000, https://*.pre-prod.demo.catena-x.net"
    tls: 
      - secretName: tls-secret
        hosts:
          - portal.pre-prod.demo.catena-x.net
    hosts:
      - host: portal.pre-prod.demo.catena-x.net
        paths:
          - path: "/(.*)"
            pathType: Prefix
            backend:
              service: "portal"
              port: 8080
          - path: "/registration/(.*)"
            pathType: Prefix
            backend:
              service: "registration"
              port: 8080
          - path: "/((assets|swagger)/.*)"
            pathType: Prefix
            backend:
              service: "assets"
              port: 8080
          - path: "/demonstrator/(.*)"
            pathType: Prefix
            backend:
              service: "demonstrator"
              port: 8080
  
  portal:
    image:
      portaltag: 0.6.0
  
  assets:
    image:
      assetstag: 0.6.0
  
  registration:
    image:
      registrationtag: 0.6.0
  
  demonstrator:
    enabled: true
    name: "demonstrator"
    image: "ghcr.io/catenax-ng/product-demonstrator:latest"

portal-backend:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: 8m
      nginx.ingress.kubernetes.io/cors-allow-origin: https://*.pre-prod.demo.catena-x.net
    tls: 
      - secretName: tls-secret
        hosts:
          - portal-backend.pre-prod.demo.catena-x.net
    hosts:
      - host: portal-backend.pre-prod.demo.catena-x.net
        paths:
          - path: /api/registration
            pathType: Prefix
            backend:
              service: registration-service
              port: 8080
          - path: /api/administration
            pathType: Prefix
            backend:
              service: administration-service
              port: 8080
          - path: /api/notification
            pathType: Prefix
            backend:
              service: notification-service
              port: 8080
          - path: /api/provisioning
            pathType: Prefix
            backend:
              service: provisioning-service
              port: 8080
          - path: /api/apps
            pathType: Prefix
            backend:
              service: marketplace-app-service
              port: 8080
          - path: /api/services
            pathType: Prefix
            backend:
              service: services-service
              port: 8080
  
  postgresql:
    fullnameOverride: "portal-backend-postgresql"
    secret:
      password: "<path:portal/data/pre-prod/postgres#postgres-password>"
      replicationPassword: "<path:portal/data/pre-prod/postgres#replication-password>"
      initUserDbSql: "<path:portal/data/pre-prod/postgres-db-user#01-init-user-db.sql>"
    primary:
      extraVolumeMounts:
        - name: initdb
          mountPath: "/docker-entrypoint-initdb.d"
        - name: initdb-secrets
          mountPath: "/secrets"
      extraVolumes:
        - name: initdb
          emptyDir: {}
        - name: initdb-secrets
          secret:
            secretName: secret-postgres-init-db-user
      initContainers:
        - name: initdb
          image: ghcr.io/catenax-ng/product-portal-cd_initdb:v0.6.0
          imagePullPolicy: Always
          command:
            - sh
          args:
            - -c
            - |
              echo "Copying initdb secret sqls..."
              cp /secrets/* /docker-entrypoint-initdb.d
              echo "Copying initdb sqls..."
              cp -R /import/* /docker-entrypoint-initdb.d
          volumeMounts:
          - name: initdb
            mountPath: "/docker-entrypoint-initdb.d"
          - name: initdb-secrets
            mountPath: "/secrets"
  
  registration:
    image:
      registrationtag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/registration#appsettings.json>"
  
  administration:
    image:
      administrationtag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/administration#appsettings.json>"
  
  provisioning:
    image:
      provisioningtag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/provisioning#appsettings.json>"
  
  appmarketplace:
    image:
      appmarketplacetag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/appmarketplace#appsettings.json>"
  
  portalmigrations:
    image:
      portalmigrationstag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/portal-migrations#appsettings.json>"
  
  portalmaintenance:
    image:
      portalmaintenancetag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/portal-maintenance#appsettings.json>"
  
  notification:
    image:
      notificationtag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/notification#appsettings.json>"
  
  services:
    image:
      servicestag: int-v0.6.0
    secret:
      appsettings: "<path:portal/data/pre-prod/services#appsettings.json>"
  
  pgadmin4:
    fullnameOverride: "portal-backend-pgadmin4"
    enabled: true
    secret:
      password: "<path:portal/data/pre-prod/pgadmin4#password>"
    env:
      email: portal@catena-x.net
    existingSecret: secret-pgadmin4
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: portal-pgadmin4.pre-prod.demo.catena-x.net
          paths:
          - path: /
            pathType: Prefix
      tls:
        - hosts:
          - portal-pgadmin4.pre-prod.demo.catena-x.net
          secretName: tls-secret
