portal-frontend:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000, https://*.pre-prod.demo.catena-x.net"
    tls: 
      - secretName: tls-secret
        hosts:
          - portal.pre-prod.demo.catena-x.net
    hosts:
      - host: portal.pre-prod.demo.catena-x.net
        paths:
          - path: "/(.*)"
            pathType: Prefix
            backend:
              service: "portal"
              port: 8080
          - path: "/registration/(.*)"
            pathType: Prefix
            backend:
              service: "registration"
              port: 8080
          - path: "/((assets|swagger)/.*)"
            pathType: Prefix
            backend:
              service: "assets"
              port: 8080
          - path: "/demonstrator/(.*)"
            pathType: Prefix
            backend:
              service: "demonstrator"
              port: 8080
  
  portal:
    image:
      portaltag: 0.5.3
  
  assets:
    image:
      assetstag: 0.5.4
  
  registration:
    image:
      registrationtag: 0.5.4
  
  demonstrator:
    enabled: true
    name: "demonstrator"
    image: "ghcr.io/catenax-ng/product-demonstrator:latest"

portal-backend:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: 8m
      nginx.ingress.kubernetes.io/cors-allow-origin: https://*.pre-prod.demo.catena-x.net
    tls: 
      - secretName: tls-secret
        hosts:
          - portal-backend.pre-prod.demo.catena-x.net
    hosts:
      - host: portal-backend.pre-prod.demo.catena-x.net
        paths:
          - path: /api/registration
            pathType: Prefix
            backend:
              service: registration-service
              port: 8080
          - path: /api/administration
            pathType: Prefix
            backend:
              service: administration-service
              port: 8080
          - path: /api/notification
            pathType: Prefix
            backend:
              service: notification-service
              port: 8080
          - path: /api/provisioning
            pathType: Prefix
            backend:
              service: provisioning-service
              port: 8080
          - path: /api/apps
            pathType: Prefix
            backend:
              service: marketplace-app-service
              port: 8080
          - path: /api/services
            pathType: Prefix
            backend:
              service: services-service
              port: 8080
  
  postgresql:
    fullnameOverride: "portal-backend-postgres"
    secret:
      password: "<path:portal/data/pre-prod/postgres#postgres-password>"
      replicationPassword: "<path:portal/data/pre-prod/postgres#replication-password>"
      initUserDbSql: "<path:portal/data/pre-prod/postgres-db-user#01-init-user-db.sql>"
    primary:
      extraVolumeMounts:
        - name: initdb
          mountPath: "/docker-entrypoint-initdb.d"
        - name: initdb-secrets
          mountPath: "/secrets"
      extraVolumes:
        - name: initdb
          emptyDir: {}
        - name: initdb-secrets
          secret:
            secretName: secret-postgres-init-db-user
      initContainers:
        - name: initdb
          image: ghcr.io/catenax-ng/product-portal-cd_initdb:v0.5.4
          imagePullPolicy: Always
          command:
            - sh
          args:
            - -c
            - |
              echo "Copying initdb secret sqls..."
              cp /secrets/* /docker-entrypoint-initdb.d
              echo "Copying initdb sqls..."
              cp -R /import/* /docker-entrypoint-initdb.d
          volumeMounts:
          - name: initdb
            mountPath: "/docker-entrypoint-initdb.d"
          - name: initdb-secrets
            mountPath: "/secrets"
  
  registration:
    image:
      registrationtag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/registration#appsettings.json>"
  
  administration:
    image:
      administrationtag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/administration#appsettings.json>"
  
  provisioning:
    image:
      provisioningtag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/provisioning#appsettings.json>"
  
  appmarketplace:
    image:
      appmarketplacetag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/appmarketplace#appsettings.json>"
  
  portalmigrations:
    image:
      portalmigrationstag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/portal-migrations#appsettings.json>"
  
  portalmaintenance:
    image:
      portalmaintenancetag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/portal-maintenance#appsettings.json>"
  
  notification:
    image:
      notificationtag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/notification#appsettings.json>"
  
  services:
    image:
      servicestag: int-v0.5.4
    secret:
      appsettings: "<path:portal/data/pre-prod/services#appsettings.json>"
  
  pgadmin4:
    fullnameOverride: "portal-backend-pgadmin4"
    enabled: true
    secret:
      password: "<path:portal/data/pre-prod/pgadmin4#password>"
    env:
      email: portal@catena-x.net
    existingSecret: secret-pgadmin4
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: portal-pgadmin4.pre-prod.demo.catena-x.net
          paths:
          - path: /
            pathType: Prefix
      tls:
        - hosts:
          - portal-pgadmin4.pre-prod.demo.catena-x.net
          secretName: tls-secret
  
  
sharedidp:
  enabled: true
  keycloak:
    fullnameOverride: "sharedidp-keycloak"
    postgresql:
      fullnameOverride: "sharedidp-postgres"
      primary:
        name: "primary"
      readReplicas:
        name: "read"
    extraVolumes:
      - name: themes
        emptyDir: {}
      - name: realms
        emptyDir: {}
      - name: realm-secrets
        secret:
          secretName: secret-sharedidp-realms
    extraVolumeMounts:
      - name: themes
        mountPath: "/opt/bitnami/keycloak/themes/catenax-shared"
      - name: realms
        mountPath: "/realms"
      - name: realm-secrets
        mountPath: "/secrets"
    initContainers:
      - name: import
        image: ghcr.io/catenax-ng/product-portal-iam_iam-import-pre-prod:v0.5.3
        imagePullPolicy: Always
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying themes..."
            cp -R /import/themes/catenax-shared/* /themes
            echo "Copying realms..."
            cp -R /import/catenax-shared/realms/* /realms
            echo "Copying realms-secrets..."
            cp /secrets/* /realms
        volumeMounts:
        - name: themes
          mountPath: "/themes"
        - name: realms
          mountPath: "/realms"
        - name: realm-secrets
          mountPath: "/secrets"
    ingress:
      enabled: true
      ingressClassName: nginx
      hostname: sharedidp.pre-prod.demo.catena-x.net
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
        nginx.ingress.kubernetes.io/cors-allow-origin: https://sharedidp.pre-prod.demo.catena-x.net, http://localhost:3000
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
        nginx.ingress.kubernetes.io/proxy-buffering: "on"
        nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
        nginx.ingress.kubernetes.io/use-regex: "true"
      tls: true
  secrets:
    auth:
      existingSecret:
        adminpassword: "<path:portal/data/pre-prod/iam/sharedidp-keycloak#admin-password>"
        managementpassword: "<path:portal/data/pre-prod/iam/sharedidp-keycloak#management-password>"
    postgresql:
      auth:
        existingSecret:
          postgrespassword: "<path:portal/data/pre-prod/iam/sharedidp-postgres#postgres-password>"
          password: "<path:portal/data/pre-prod/iam/sharedidp-postgres#password>"
          replicationPassword: "<path:portal/data/pre-prod/iam/sharedidp-postgres#replication-password>"
    realmuser:
      enabled: true
      cxtestaccessuser: "<path:portal/data/pre-prod/iam/sharedidp-realms#CX-Test-Access-users-0.json>"
      company1user: "<path:portal/data/pre-prod/iam/sharedidp-realms#Company-1-users-0.json>"
      company2user: "<path:portal/data/pre-prod/iam/sharedidp-realms#Company-2-users-0.json>"
      company3user: "<path:portal/data/pre-prod/iam/sharedidp-realms#Company-3-users-0.json>"
      masteruser: "<path:portal/data/pre-prod/iam/sharedidp-realms#Company-1-users-0.json>"
    
centralidp:
  enabled: true
  keycloak:
    fullnameOverride: "centralidp-keycloak"
    postgresql:
      fullnameOverride: "centralidp-postgres"
      primary:
        name: "primary"
      readReplicas:
        name: "read"
    extraVolumes:
      - name: themes
        emptyDir: {}
      - name: realms
        emptyDir: {}
      - name: realm-secrets
        secret:
          secretName: secret-centralidp-realms
    extraVolumeMounts:
      - name: themes
        mountPath: "/opt/bitnami/keycloak/themes/catenax-central"
      - name: realms
        mountPath: "/realms"
      - name: realm-secrets
        mountPath: "/secrets"
    initContainers:
      - name: import
        image: ghcr.io/catenax-ng/product-portal-iam_iam-import-pre-prod:latest
        imagePullPolicy: Always
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying themes..."
            cp -R /import/themes/catenax-central/* /themes
            echo "Copying realms..."
            cp -R /import/catenax-central/realms/* /realms
            echo "Copying realms-secrets..."
            cp /secrets/* /realms
        volumeMounts:
        - name: themes
          mountPath: "/themes"
        - name: realms
          mountPath: "/realms"
        - name: realm-secrets
          mountPath: "/secrets"
    ingress:
      enabled: true
      ingressClassName: nginx
      hostname: centralidp.pre-prod.demo.catena-x.net
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
        nginx.ingress.kubernetes.io/cors-allow-origin: https://centralidp.pre-prod.demo.catena-x.net, http://localhost:3000
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
        nginx.ingress.kubernetes.io/proxy-buffering: "on"
        nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
        nginx.ingress.kubernetes.io/use-regex: "true"
      tls: true
  secrets:
    auth:
      existingSecret:
        adminpassword: "<path:portal/data/pre-prod/iam/centralidp-keycloak#admin-password>"
        managementpassword: "<path:portal/data/pre-prod/iam/centralidp-keycloak#management-password>"
    postgresql:
      auth:
        existingSecret:
          postgrespassword: "<path:portal/data/pre-prod/iam/centralidp-postgres#postgres-password>"
          password: "<path:portal/data/pre-prod/iam/centralidp-postgres#password>"
          replicationPassword: "<path:portal/data/pre-prod/iam/centralidp-postgres#replication-password>"
    realmuser:
      enabled: true
      cxcentraluser: "<path:portal/data/pre-prod/iam/centralidp-realms#CX-Central-users-0.json>"
